version: '2'

networks:
  logging:
    driver: bridge

services:

  ## elasticsearch + logstash + kibana
  #elk:
  #  container_name: knecht-elk1
  #  image: sebp/elk:es241_l240_k461
  #  restart: unless-stopped
  #  environment:
  #    - ELASTICSEARCH_START=1
  #    - LOGSTASH_START=1
  #    - KIBANA_START=1
  #    - ES_HEAP_SIZE=2g
  #    - LS_HEAP_SIZE=1g
  #    - LOGSPOUT=ignore
  #  volumes:
  #    - ./docker-data/elk-stuff/elasticsearch/:/var/lib/elasticsearch
  #  ports:
  #    - "5601:5601"
  #    - "9200:9200"
  #    - "5044:5044"
  #    - "5000:5000"
  #    - "5000:5000/udp"

  ## logspout: log router for docker
  #logspout:
  #  container_name: knecht-logspout1
  #  image: gliderlabs/logspout:master
  #  restart: unless-stopped
  #  environment:
  #    - DEBUG=true
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
  #  depends_on:
  #    - elk
  #  links:
  #    - elk:elk
  #  ports:
  #    - "8083:80"
  #  command: syslog://elk:5000

  ## mesos: distributed systems kernel
  zookeeper:
    container_name: knecht-zookeeper1
    image: jplock/zookeeper:3.4.9
    restart: unless-stopped
    ports:
      - "2181:2181"


  ## mesos: distributed systems kernel
  master:
    container_name: knecht-mesos-master1
    image: mesoscloud/mesos-master:0.28.1-ubuntu
    restart: unless-stopped
    hostname: master
    depends_on:
      - zookeeper
    links:
      - zookeeper:zookeeper
    environment:
      - MESOS_ZK=zk://zookeeper:2181/mesos
      - MESOS_QUORUM=1
      - MESOS_WORK_DIR=/var/lib/mesos
      - MESOS_LOG_DIR=/var/log
    volumes:
      - ./docker-data/mesosmaster-stuff/log:/var/log
      - ./docker-data/mesosmaster-stuff/work:/var/lib/mesos
    ports:
      - "5050:5050"


  ## mesos slave: distributed systems kernel
  slave:
    container_name: knecht-mesos-slave1
    image: mesoscloud/mesos-slave:0.28.1-ubuntu
    restart: unless-stopped
    depends_on:
      - zookeeper
      - master
    links:
      - zookeeper:zookeeper
      - master:master
    environment:
      - MESOS_MASTER=zk://zookeeper:2181/mesos
      - MESOS_EXECUTOR_REGISTRATION_TIMEOUT=5mins
      - MESOS_CONTAINERIZERS=docker,mesos
      - MESOS_ISOLATOR=cgroups/cpu,cgroups/mem
      - MESOS_LOG_DIR=/var/log
    volumes:
      - /var/run/docker.sock:/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - /sys:/sys:ro
      - ./docker-data/mesosslave-stuff/log:/var/log
    expose:
      - "5051"
    ports:
      - "5051:5051"


  ## marathon: orchestration platform for mesos
  marathon:
    container_name: knecht-marathon1
    #image: mesosphere/marathon:v1.3.3
    image: mesosphere/marathon:v1.4.0-snap16
    restart: unless-stopped
    depends_on:
      - zookeeper
    links:
      - zookeeper:zookeeper
    ports:
      - "8080:8080"
    # this image does not respect MARATHON_ env variables, so adding the params via command
    command: --master zk://zookeeper:2181/mesos --zk zk://zookeeper:2181/marathon


  ## jenkins build server
  jenkins:
    container_name: knecht-jenkins1
    image: lkwg82/jenkins_with_docker
    restart: unless-stopped
    depends_on:
      - marathon
    links:
      - marathon:marathon
    volumes:
      - ./docker-data/jenkins-stuff/home:/var/jenkins_home
      - ./docker-data/jenkins-stuff/data:/var/jenkins_data
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    ports:
      - "8081:8080"


  ## docker registry
  registry:
    container_name: knecht-registry1
    image: registry:2.5.1
    restart: unless-stopped
    environment:
      - STORAGE_PATH=/registry
    volumes:
      - ./docker-data/registry-stuff:/registry
    ports:
      - "5001:5000"

  elasticsearch:
    extends:
      file: docker-compose-common.yml
      service: elasticsearch
    build: dockerfiles/elasticsearch
    container_name: knecht-elasticsearch1

  logstash:
    extends:
      file: docker-compose-common.yml
      service: logstash
    build: dockerfiles/logstash
    container_name: knecht-logstash1
    links:
      - elasticsearch:elasticsearch
    networks:
      - logging

  kibana:
    extends:
      file: docker-compose-common.yml
      service: kibana
    build: dockerfiles/kibana
    container_name: knecht-kibana1

  logspout:
    extends:
      file: docker-compose-common.yml
      service: logspout
    container_name: knecht-logspout1
    links:
      - logstash:logstash

  cadvisor:
    extends:
      file: docker-compose-common.yml
      service: cadvisor
    container_name: knecht-cadvisor1
